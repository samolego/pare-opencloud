name: Release

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to release'
        required: true
        type: string

jobs:
  build-and-release:
    name: Build and Package Extension
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.tag || github.ref }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.15.0

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Type check
        run: pnpm check:types

      - name: Lint
        run: pnpm lint

      - name: Run tests
        run: pnpm test:unit

      - name: Build for production
        run: pnpm build

      - name: Get package version
        id: package-version
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Create release archive
        run: |
          mv dist/ pare/
          zip -r web-app-pare-${{ steps.package-version.outputs.version }}.zip pare/
          rm -rf pare

      - name: Upload release assets
        if: github.event_name == 'release'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./web-app-pare-${{ steps.package-version.outputs.version }}.zip
          asset_name: web-app-pare-${{ steps.package-version.outputs.version }}.zip
          asset_content_type: application/zip

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: web-app-pare-release-${{ steps.package-version.outputs.version }}
          path: |
            dist/
            web-app-pare-${{ steps.package-version.outputs.version }}.zip
          retention-days: 30
